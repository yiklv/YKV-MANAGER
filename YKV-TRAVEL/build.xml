<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" name="travel" default="travel-war" basedir=".">
    <description>Builds, tests, and runs the project dsolrcloud.</description>

    <!-- 配置开发环境 -->
    <property environment="env"/>

    <property name="version" value="1.0"/>
    <property name="project" value="${ant.project.name}"/>
    <property name="domain" value="net"/>

    <!-- 项目web页面路径 -->
    <property name="web.root" location="src/main" />
    <!-- 项目源代码目录 -->
    <property name="src.dir" location="${web.root}/java"/>
    <!-- 项目配置文件路径 -->
    <property name="config.dir" location="${web.root}/resources" />
    <!-- 项目web页面路径 -->
    <property name="web.dir" location="${web.root}/webapp" />
    <!--  target 编译基础目录 -->
    <property name="target.dir" location="target/${project}"/>
    <!-- javac编译后生成的class文件路径 -->
    <property name="build.dir" location="${target.dir}/WEB-INF/classes" />
    <!-- 最终生成war包的路径 -->
    <property name="dist.dir" location="${target.dir}"/>



    <!-- maven-ant-tasks 下载maven依赖jar包的存放路径  -->
    <property name="lib.dir" location="${target.dir}/WEB-INF/lib"/>
    <!-- 项目测试文件路径 -->
    <property name="test.dir" location="src/test/java"/>

    <!-- 配置本地Tomcat路径的lib目录 -->
    <property name="tomcat.lib.dir" location="${env.CATALINA_HOME}/lib" />

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="clean" description="清理ant编译文件">
        <delete dir="${target.dir}" />
    </target>

    <target name="makedir" description="建立文件夹">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${lib.dir}"/>
    </target>

    <target name="dependency" depends="makedir" description="配置 ant 自动下载maven的依赖包 end ">
        <!-- 引入tomcat的jar包-->
        <!--<copydir src="${tomcat.lib.dir}" dest="${lib.dir}" /> -->
        <!-- 下载maven依赖-->
        <path id="maven-ant-tasks.classpath" path="${basedir}/src/main/webapp/WEB-INF/lib/maven-ant-tasks-2.1.3.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />

        <artifact:dependencies filesetId="mavenlib" pathId="mavenclasspath" useScope="runtime">
            <pom file="pom.xml" />
        </artifact:dependencies>

        <copy todir="${lib.dir}">
            <fileset refid="mavenlib" />
            <mapper type="flatten" />
        </copy>
    </target>

    <target name="compile" depends="dependency" description="编译代码">
        <!-- 编译所有的Java代码 -->
        <javac srcdir="${src.dir}"
               destdir="${build.dir}"
               encoding="UTF-8"
               includeantruntime="no"
               excludes="**/test/*,**/test/bean/*,**/*.svn,*.svn"
               includes="**/*.java"
               source="1.7"
               target="1.7"
               deprecation="true"
               failonerror="true"
               debug="true">
            <classpath refid="classpath" />
        </javac>

        <!-- 把所有文件copy到build目录 -->
        <copy todir="${build.dir}">
            <fileset dir="${config.dir}" includes="**/*"/>
        </copy>
    </target>

    <!-- 生成Javadoc 文档 -->
    <!--<target name="6 - javadoc" description="生成Javadoc文档">
        <delete dir="${doc.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <javadoc packagenames="com.bluedream.*" sourcepath="${src.dir}" destdir="${doc.dir}"
                 windowtitle="${project} Javadoc" use="yes"
                 linksource="no" splitindex="yes" encoding="UTF-8"
                 docencoding="GBK" locale="zh_CN">
            <classpath refid="classpath"/>
            <packageset dir="${src.dir}" defaultexcludes="yes">
                <include name="${domain}/${package}/**"/>
            </packageset>
        </javadoc>
    </target>-->

    <target name="package" depends="compile" description="打war包" >
        <mkdir dir="${dist.dir}/${version}" />
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss"/>
            <format property="TIME" pattern="yyMMddHHmm"/>
        </tstamp>

        <!-- 生成Web配置及部署文件 -->
        <war destfile="${dist.dir}/${version}/${project}.v${TIME}.war"
             webxml="${web.root}/WEB-INF/web.xml" manifest="${web.root}/META-INF/MANIFEST.MF">
            <fileset dir="${web.root}" excludes="${web.root}/WEB-INF/classes/*" />
            <classes dir="${build.dir}" />
            <lib dir="${lib.dir}" includes="**/*.jar" />
        </war>
    </target>

    <target name="travel-war" depends="clean, package">
    </target>

</project>